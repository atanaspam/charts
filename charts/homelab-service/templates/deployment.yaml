kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "service.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "service.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "service.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backend
        {{- include "service.labels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "service.name" . }}
      automountServiceAccountToken: true
      {{- end }}
      {{- if .Values.container.runtimeClassName }}
      runtimeClassName: {{ .Values.container.runtimeClassName }}
      {{- end }}
      containers:
        - name: {{ include "service.name" . }}
          image: "{{ .Values.container.image | default (printf "lscr.io/linuxserver/%s:latest" (include "service.name" .)) }}"
          imagePullPolicy: {{ .Values.container.imagePullPolicy }}
          {{- with .Values.container.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.container.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.container.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.container.command }}
          command:
            {{- toYaml .Values.container.command | nindent 12 }}
          {{- end }}
          {{- if .Values.container.args }}
          args:
            {{- toYaml .Values.container.args | nindent 12 }}
          {{- end }}
      {{- if or (.Values.initContainers) (.Values.monitoring.exportarr.create) }}
      initContainers:
      {{- with .Values.initContainers }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
        {{- if .Values.monitoring.exportarr.create }}
        - name: {{ include "service.name" . }}-exporter
          image: ghcr.io/onedr0p/exportarr:{{ .Values.monitoring.exportarr.version | default "latest" }}
          imagePullPolicy: IfNotPresent
          restartPolicy: Always
          args:
            - {{ include "service.name" . }}
          env:
            - name: PORT
              value: "9707"
            - name: URL
              value: "http://{{ include "service.name" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ (index .Values.container.ports 0).containerPort }}"
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "service.name" . }}
                  key: {{ .Values.monitoring.exportarr.apiKeySecretName}}
          ports:
            - name: monitoring
              containerPort: 9707
          livenessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 256Mi
        {{- end }}
      {{- end }}
      volumes:
        {{- tpl (.Values.volumes | toYaml) . | nindent 8 }}
