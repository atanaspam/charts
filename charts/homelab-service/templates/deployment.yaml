{{- with .Values.deployment -}}
{{- if .create -}}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ tpl .name $ }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "service.labels" $ | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ tpl .name $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  replicas: {{ .replicaCount }}
  progressDeadlineSeconds: {{ .progressDeadlineSeconds }}
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backend
        {{- include "service.labels" $ | nindent 8 }}
      {{- with .podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.serviceAccount.create }}
      serviceAccountName: {{ include "service.name" $ }}
      automountServiceAccountToken: true
      {{- end }}
      {{- if .runtimeClassName }}
      runtimeClassName: {{ .runtimeClassName }}
      {{- end }}
      containers:
        - name: {{ include "service.name" $ }}
          image: {{ .container.image }}
          imagePullPolicy: {{ .container.imagePullPolicy }}
          {{- with .container.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            {{- tpl (.container.livenessProbe | toYaml) $ | nindent 12 }}
          readinessProbe:
            {{- tpl (.container.livenessProbe | toYaml) $ | nindent 12 }}
          resources:
            {{- toYaml .container.resources | nindent 12 }}
          {{- with .container.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .container.env }}
          env:
            {{- tpl (. | toYaml) $ | nindent 12 }}
          {{- end }}
          {{- if .container.command }}
          command:
            {{- toYaml .container.command | nindent 12 }}
          {{- end }}
          {{- if .container.args }}
          args:
            {{- toYaml .container.args | nindent 12 }}
          {{- end }}
      volumes:
        {{- tpl ($.Values.volumes | toYaml) $ | nindent 8 }}
      {{- if or (.initContainers) ($.Values.monitoring.exportarr.create) }}
      initContainers:
      {{- with .initContainers }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
        {{- if $.Values.monitoring.exportarr.create }}
        - name: {{ include "service.name" . }}-exporter
          image: ghcr.io/onedr0p/exportarr:{{ .Values.monitoring.exportarr.version | default "latest" }}
          imagePullPolicy: IfNotPresent
          restartPolicy: Always
          args:
            - {{ include "service.name" . }}
          env:
            - name: PORT
              value: "9707"
            - name: URL
              value: "http://{{ include "service.name" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ (index .Values.container.ports 0).containerPort }}"
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "service.name" $ }}
                  key: {{ $.Values.monitoring.exportarr.apiKeySecretName}}
          ports:
            - name: monitoring
              containerPort: 9707
          livenessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 256Mi
        {{- end }}
      {{- end }}
{{- end }}
{{- end }}
