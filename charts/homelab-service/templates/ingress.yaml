{{- if .Values.ingress.create }}
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ include "service.name" . }}
  namespace: {{ .Release.Namespace }}
  annotations:
    external-dns.alpha.kubernetes.io/target: {{ include "cluster.fqdn" . }}
    kubernetes.io/ingress.class: traefik
  labels:
    {{- include "service.labels" . | nindent 4 }}
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: {{  printf "Host(`%s.%s`)" (include "service.name" .) (include "cluster.fqdn" .) }}
      middlewares:
        - name: https-redirectscheme
          namespace: traefik
        {{- if .Values.ingress.defaultRoute.extraMiddlewares }}
        {{- tpl (.Values.ingress.defaultRoute.extraMiddlewares | toYaml) . | nindent 8 }}
        {{- end }}
      services:
      - kind: Service
        name: {{ include "service.name" $ }}
        namespace: {{ $.Release.Namespace }}
        passHostHeader: true
        {{- range $port := $.Values.service.ports }}
          {{- if eq $port.name "http" }}
        port: {{ $port.port }}
          {{- end }}
        {{- end }}
    {{- range .Values.ingress.extraRoutes }}
    - kind: Rule
      match: {{  printf "Host(`%s`)" (tpl .match $) }}
      {{- if .customMiddlewares }}
      middlewares:
        {{- range .customMiddlewares }}
      - name: {{ .name }}
        namespace: {{ .namespace }}
        {{- end }}
      {{- end }}
      services:
      - kind: Service
        name: {{ include "service.name" $ }}
        namespace: {{ $.Release.Namespace }}
        passHostHeader: true
        {{- range $port := $.Values.service.ports }}
          {{- if eq $port.name "http" }}
        port: {{ $port.port }}
          {{- end }}
        {{- end }}
    {{- end }}
  tls:
    secretName: {{ include "service.name" . }}-cert
---
{{- if .Values.ingress.issuer }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "service.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  secretName: {{ include "service.name" . }}-cert
  issuerRef:
    name: {{ .Values.ingress.issuer.name }}
    kind: ClusterIssuer
  additionalOutputFormats:
  - type: CombinedPEM
  dnsNames:
  - {{  printf "%s.%s" (include "service.name" .) (include "cluster.fqdn" .) }}
  {{- range .Values.ingress.extraRoutes }}
  - {{ tpl .match $ }}
  {{- end }}
{{- end }}
{{- end }}

{{- range .Values.customMiddleware.definitions }}
---
{{ include "service.render" (dict "value" . "context" $) }}
{{- end }}
